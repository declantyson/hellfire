{"version":3,"sources":["../src/characters.es6.js"],"names":["Character","game","startPosX","startPosY","stocks","startingStockCount","opts","id","name","maxSpeed","fps","acceleration","deceleration","turnDelay","hurtboxes","hitboxes","weight","airSpeed","jumpPower","jumpHeight","allowedJumps","jumpThreshold","keysHeld","currentSpeed","currentFallSpeed","currentDir","currentVerticalDir","jumpStart","y","jumpsRemaining","jumping","stun","attacking","invulnerable","visibleHitboxes","damage","stage","fall","gravity","floors","currentKeys","keyBindings","basicAttack","i","length","push","currentFrame","endFrame","cooldown","hitstun","right","keyChanged","turn","move","left","stop","jump","jumpHeld","up","down","hurt","hurtbox","c","players","character","hit","hitbox","active","x","calculatedX","width","height","yOffset","getHit","canvas","loseStock","gameOver","angleToSpeedModifier","angle","knockback","console","log","dir","setTimeout","maxMovementSpeed","hitFloor","h","f","floor","Hurtbox","Hitbox","xOffset","growth","startFrame","hitstunFrames"],"mappings":"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","file":"characters.js","sourcesContent":["/*\n *\n *\tXL Platform Fighter/Characters\n *\tXL Gaming/Declan Tyson\n *\tv0.0.113\n *\t23/09/2016\n *\n */\n\nclass Character {\n    constructor(game, startPosX, startPosY) {\n        this.game = game;\n        this.startPosX = startPosX;\n        this.startPosY = startPosY;\n        this.stocks = this.game.startingStockCount;\n    }\n\n    initialise(opts) {\n        // attributes\n        this.id = opts.id;\n        this.name = opts.name;\n        this.maxSpeed = opts.maxSpeed / this.game.fps;\n        this.acceleration = opts.acceleration;\n        this.deceleration = opts.deceleration;\n        this.turnDelay = opts.turnDelay;\n        this.hurtboxes = opts.hurtboxes;\n        this.hitboxes = opts.hitboxes;\n        this.weight = 1/opts.weight;\n        this.airSpeed = opts.airSpeed / this.game.fps;\n        this.jumpPower = 1/opts.jumpPower;\n        this.jumpHeight = opts.jumpHeight;\n        this.allowedJumps = opts.allowedJumps;\n        this.jumpThreshold = opts.jumpThreshold;\n\n        // state\n        this.keysHeld = {};\n        this.currentSpeed = 0;\n        this.currentFallSpeed = 0;\n        this.currentDir = opts.currentDir;\n        this.currentVerticalDir = 1;\n        this.jumpStart = this.hurtboxes[0].y;\n        this.jumpsRemaining = opts.allowedJumps;\n        this.jumping = false;\n        this.stun = false;\n        this.attacking = false;\n        this.invulnerable = false;\n        this.visibleHitboxes = [];\n\n        this.damage = 0;\n    }\n    \n    drawActions(stage) {\n        this.fall(stage.gravity, stage.floors);\n        this.visibleHitboxes = [];\n\n        if(this.game.currentKeys[this.keyBindings.basicAttack] && !this.stun) {\n            if(!this.attacking) this.attacking = true;\n            for(var i = 0; i < this.hitboxes.basicAttack.length; i++) {\n                this.visibleHitboxes.push(this.hitboxes.basicAttack[i]);\n            }\n        } else {\n            for(var i = 0; i < this.hitboxes.basicAttack.length; i++) {\n                if (this.hitboxes.basicAttack[i].currentFrame > this.hitboxes.basicAttack[i].endFrame + this.hitboxes.basicAttack[i].cooldown) {\n                    this.hitboxes.basicAttack[i].currentFrame = 0;\n                    this.attacking = false;\n                }\n                if(this.attacking) {\n                    this.visibleHitboxes.push(this.hitboxes.basicAttack[i]);\n                }\n            }\n            this.keysHeld[this.keyBindings.basicAttack] = false;\n        }\n\n        if(this.stun) {\n            this.hitstun();\n        } else if(this.game.currentKeys[this.keyBindings.right]) {\n            if (this.game.keyChanged && this.currentDir !== 1) {\n                this.turn(1);\n            }\n            this.move();\n        } else if (this.game.currentKeys[this.keyBindings.left]) {\n            if (this.game.keyChanged && this.currentDir !== -1) {\n                this.turn(-1);\n            }\n            this.move();\n        } else {\n            this.stop();\n        }\n\n        if (this.game.currentKeys[this.keyBindings.jump] && !this.stun) {\n            if(this.jumpHeld) return;\n            this.jumpHeld = true;\n            if (this.jumpsRemaining > 0) {\n                if (\n                    (this.currentVerticalDir === -1 &&\n                    this.jumpsRemaining < this.allowedJumps &&\n                    this.hurtboxes[0].y > this.jumpStart - this.jumpThreshold.up)\n                        ||\n                    (this.currentVerticalDir === 1 &&\n                    this.jumpsRemaining < this.allowedJumps &&\n                    this.hurtboxes[0].y > this.jumpStart - this.jumpThreshold.down)\n                ) {\n                    return;\n                }\n                this.jumpStart = this.hurtboxes[0].y;\n                this.currentVerticalDir = -1;\n                this.jumpsRemaining--;\n            }\n        } else {\n            this.jumpHeld = false;\n        }\n\n        if(!this.invulnerable) {\n            for (var hurt = 0; hurt < this.hurtboxes.length; hurt++) {\n                var hurtbox = this.hurtboxes[hurt];\n                for (var c = 0; c < this.game.players.length; c++) {\n                    var character = this.game.players[c].character;\n                    if (this === character) continue;\n                    for (var hit = 0; hit < character.visibleHitboxes.length; hit++) {\n                        var hitbox = character.visibleHitboxes[hit];\n                        if (\n                            hitbox.active &&\n                            (hurtbox.x < hitbox.calculatedX + hitbox.width &&\n                            hurtbox.x + hurtbox.width > hitbox.calculatedX) &&\n                            (hurtbox.y - hurtbox.height < character.hurtboxes[0].y - hitbox.yOffset &&\n                            hurtbox.y > character.hurtboxes[0].y - hitbox.yOffset - hitbox.height)\n                        ) {\n                            this.jumpStart = this.hurtboxes[0].y;\n                            this.getHit(hitbox);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        if(this.hurtboxes[0].x < 0 || this.hurtboxes[0].y < 0 || this.hurtboxes[0].x > this.game.canvas.width || this.hurtboxes[0].y > this.game.canvas.height) {\n            this.loseStock();\n        }\n    }\n\n    loseStock() {\n        this.stocks--;\n        this.damage = 0;\n        if(this.stocks <= 0) {\n            this.game.gameOver();\n        } else {\n            this.hurtboxes[0].x = this.startPosX;\n            this.hurtboxes[0].y = this.startPosY;\n            this.currentSpeed = 0;\n        }\n    }\n\n    getHit(hitbox) {\n        var angleToSpeedModifier = hitbox.angle / 45;\n\n        this.currentVerticalDir = -1;\n        this.currentFallSpeed = this.currentVerticalDir * angleToSpeedModifier * hitbox.knockback * (1 + (this.damage/100));\n\n        this.damage += hitbox.damage;\n        console.log(this.damage, hitbox.damage);\n\n        this.currentDir = hitbox.dir;\n        this.currentSpeed = (1 / angleToSpeedModifier) * hitbox.knockback;\n\n        //this.stun = true;\n        this.invulnerable = true;\n\n        var character = this;\n        setTimeout(function () {\n            character.invulnerable = false;\n        }, 100);\n\n        setTimeout(function() {\n            character.stun = false;\n        }, hitbox.hitstun);\n    }\n\n    hitstun() {\n        //this.stop()\n    }\n\n    move() {\n        var maxMovementSpeed = this.maxSpeed;\n        if(this.currentFallSpeed > 0) maxMovementSpeed = this.airSpeed;\n\n        var acceleration = maxMovementSpeed / (this.acceleration * this.game.fps);\n        if(this.currentSpeed < maxMovementSpeed) {\n            this.currentSpeed += acceleration;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    stop() {\n        var deceleration = this.maxSpeed / (this.deceleration * this.game.fps);\n        if(this.currentFallSpeed > 0) {\n            deceleration = deceleration / 3;\n        }\n\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    turn(dir) {\n        if(this.currentSpeed === 0) return;\n\n        let deceleration = this.maxSpeed / (this.turnDelay * this.game.fps);\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        if(this.currentSpeed === 0) {\n            this.currentDir = dir;\n            this.game.keyChanged = false;\n        }\n    }\n\n    fall(gravity, floors) {\n        if(this.currentVerticalDir === -1) {\n            this.jump(gravity, floors);\n            return;\n        }\n\n        if(this.currentFallSpeed > 0) {\n            this.jumping = false;\n        }\n\n        var hitFloor = false;\n\n        for(let h = 0; h < this.hurtboxes.length; h++) {\n            let hurtbox = this.hurtboxes[h];\n\n            for(let f = 0; f < floors.length; f++) {\n                let floor = floors[f];\n                if(\n                    !this.jumping &&\n                    (hurtbox.y >= floor.y && this.currentVerticalDir === 1) &&\n                    ((hurtbox.y - hurtbox.height <= floor.y)) &&\n                    ((hurtbox.x >= floor.x && hurtbox.x <= floor.x + floor.width) ||\n                    (hurtbox.x + hurtbox.width >= floor.x && hurtbox.x + hurtbox.width <= floor.x + floor.width))\n                ) {\n                    hitFloor = true;\n                    if(this.stun) {\n                        this.stun = false;\n                        this.currentSpeed = this.currentDir;\n                    }\n                    this.hurtboxes[0].y = floor.y;\n                }\n            }\n            if(hitFloor) {\n                this.jumpsRemaining = this.allowedJumps;\n                this.currentFallSpeed = 0;\n                break;\n            } else if(this.jumpsRemaining === this.allowedJumps) {\n                this.jumpsRemaining = this.allowedJumps - 1;\n            }\n\n            this.currentFallSpeed += gravity / (this.weight * this.game.fps);\n            hurtbox.y += this.currentFallSpeed;\n        }\n    }\n    \n    jump(gravity, floors) {\n        if(this.hurtboxes[0].y > this.jumpStart - this.jumpHeight) {\n            this.currentFallSpeed -= gravity / (this.jumpPower * this.game.fps);\n            this.hurtboxes[0].y += this.currentFallSpeed;\n            this.jumping = true;\n        } else if(!this.stun) {\n            this.currentVerticalDir = 1;\n        }\n    }\n}\n\nclass Hurtbox {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n\nclass Hitbox {\n    constructor(opts) {\n        this.xOffset = opts.xOffset;\n        this.yOffset = opts.yOffset;\n        this.width = opts.width;\n        this.height = opts.height;\n        this.damage = opts.damage;\n        this.angle = opts.angle;\n        this.knockback = opts.knockback;\n        this.growth = opts.growth;\n        this.startFrame = opts.startFrame;\n        this.endFrame = opts.endFrame;\n        this.cooldown = opts.cooldown;\n\n        this.name = opts.name;\n\n        this.dir = 1;\n        this.currentFrame = 0;\n        this.active = false;\n        let hitstunFrames = opts.hitstun || 60;\n        this.hitstun = (hitstunFrames / 60) * 1000;\n    }\n}\n"]}