{"version":3,"sources":["../src/characters.es6.js"],"names":["Character","game","name","maxSpeed","acceleration","deceleration","currentDir","hurtboxes","turnDelay","weight","airSpeed","fps","currentSpeed","currentFallSpeed","currentVerticalDir","maxMovementSpeed","i","length","x","dir","keyChanged","gravity","floors","hitFloor","h","hurtbox","f","floor","y","startY","startX","endX","width","console","log","Hurtbox","height"],"mappings":"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","file":"characters.js","sourcesContent":["/*\n *\n *\tXL Platform Fighter/Characters\n *\tXL Gaming/Declan Tyson\n *\tv0.0.4\n *\t08/09/2016\n *\n */\n\nclass Character {\n    constructor(game, name, maxSpeed, acceleration, deceleration, currentDir, hurtboxes, turnDelay, weight, airSpeed) {\n        this.game = game;\n\n        // attributes\n        this.name = name;\n        this.maxSpeed = maxSpeed / this.game.fps;\n        this.acceleration = acceleration;\n        this.deceleration = deceleration;\n        this.turnDelay = turnDelay;\n        this.hurtboxes = hurtboxes;\n        this.weight = weight;\n        this.airSpeed = airSpeed / this.game.fps;\n\n        // state\n        this.currentSpeed = 0;\n        this.currentFallSpeed = 0;\n        this.currentDir = currentDir;\n        this.currentVerticalDir = 1;\n    }\n\n    move() {\n        var maxMovementSpeed = this.maxSpeed;\n        if(this.currentFallSpeed > 0) maxMovementSpeed = this.airSpeed;\n\n        var acceleration = maxMovementSpeed / (this.acceleration * this.game.fps);\n        if(this.currentSpeed < maxMovementSpeed) {\n            this.currentSpeed += acceleration;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    stop() {\n        var deceleration = this.maxSpeed / (this.deceleration * this.game.fps);\n        if(this.currentFallSpeed > 0) {\n            deceleration = deceleration / 3;\n        }\n\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    turn(dir) {\n        if(this.currentSpeed === 0) return;\n\n        let deceleration = this.maxSpeed / (this.turnDelay * this.game.fps);\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        if(this.currentSpeed === 0) {\n            this.currentDir = dir;\n            this.game.keyChanged = false;\n        }\n    }\n\n    fall(gravity, floors) {\n        var hitFloor = false;\n\n        for(let h = 0; h < this.hurtboxes.length; h++) {\n            let hurtbox = this.hurtboxes[h];\n            for(let f = 0; f < floors.length; f++) {\n                let floor = floors[f];\n                if(\n                    hurtbox.y == floor.startY &&\n                    ((hurtbox.x >= floor.startX && hurtbox.x <= floor.endX) ||\n                    (hurtbox.x + hurtbox.width >= floor.startX && hurtbox.x + hurtbox.width <= floor.endX))\n                ) {\n                    hitFloor = true;\n                }\n            }\n            if(hitFloor) {\n                this.currentFallSpeed = 0;\n                break;\n            }\n\n            console.log(this.currentFallSpeed);\n\n            this.currentFallSpeed += gravity / (this.weight * this.game.fps);\n            hurtbox.y += this.currentVerticalDir * this.currentFallSpeed;\n        }\n    }\n}\n\nclass Hurtbox {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n"]}