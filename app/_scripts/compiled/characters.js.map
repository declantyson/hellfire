{"version":3,"sources":["../src/characters.es6.js"],"names":["Character","game","startPosX","startPosY","stocks","startingStockCount","opts","id","name","maxSpeed","fps","acceleration","deceleration","turnDelay","hurtboxes","hitboxes","weight","airSpeed","jumpPower","jumpHeight","allowedJumps","jumpThreshold","keysHeld","currentSpeed","currentFallSpeed","currentDir","currentVerticalDir","jumpStart","y","jumpsRemaining","jumping","stun","invulnerable","visibleHitboxes","stage","fall","gravity","floors","currentKeys","keyBindings","basicAttack","currentFrame","endFrame","cooldown","hitstun","right","keyChanged","turn","move","left","stop","jump","jumpHeld","up","down","hurt","length","hurtbox","c","players","character","hit","hitbox","active","x","calculatedX","width","height","yOffset","getHit","canvas","loseStock","gameOver","angleToSpeedModifier","angle","knockback","dir","setTimeout","maxMovementSpeed","i","hitFloor","h","f","floor","Hurtbox","Hitbox","xOffset","damage","growth","startFrame","hitstunFrames"],"mappings":"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","file":"characters.js","sourcesContent":["/*\n *\n *\tXL Platform Fighter/Characters\n *\tXL Gaming/Declan Tyson\n *\tv0.0.106\n *\t16/09/2016\n *\n */\n\nclass Character {\n    constructor(game, startPosX, startPosY) {\n        this.game = game;\n        this.startPosX = startPosX;\n        this.startPosY = startPosY;\n        this.stocks = this.game.startingStockCount;\n    }\n\n    initialise(opts) {\n        // attributes\n        this.id = opts.id;\n        this.name = opts.name;\n        this.maxSpeed = opts.maxSpeed / this.game.fps;\n        this.acceleration = opts.acceleration;\n        this.deceleration = opts.deceleration;\n        this.turnDelay = opts.turnDelay;\n        this.hurtboxes = opts.hurtboxes;\n        this.hitboxes = opts.hitboxes;\n        this.weight = 1/opts.weight;\n        this.airSpeed = opts.airSpeed / this.game.fps;\n        this.jumpPower = 1/opts.jumpPower;\n        this.jumpHeight = opts.jumpHeight;\n        this.allowedJumps = opts.allowedJumps;\n        this.jumpThreshold = opts.jumpThreshold;\n\n        // state\n        this.keysHeld = {};\n        this.currentSpeed = 0;\n        this.currentFallSpeed = 0;\n        this.currentDir = opts.currentDir;\n        this.currentVerticalDir = 1;\n        this.jumpStart = this.hurtboxes[0].y;\n        this.jumpsRemaining = opts.allowedJumps;\n        this.jumping = false;\n        this.stun = false;\n        this.invulnerable = false;\n        this.visibleHitboxes = [];\n    }\n    \n    drawActions(stage) {\n        this.fall(stage.gravity, stage.floors);\n\n        if(this.game.currentKeys[this.keyBindings.basicAttack] && !this.stun) {\n            if(this.keysHeld[this.keyBindings.basicAttack] === false) {\n                this.keysHeld[this.keyBindings.basicAttack] = true;\n                if(this.hitboxes.basicAttack[0].currentFrame > this.hitboxes.basicAttack[0].endFrame + this.hitboxes.basicAttack[0].cooldown) {\n                    this.hitboxes.basicAttack[0].currentFrame = 0;\n                }\n            }\n            if(this.hitboxes.basicAttack[0].currentFrame > this.hitboxes.basicAttack[0].endFrame + this.hitboxes.basicAttack[0].cooldown) {\n                if(this.keysHeld[this.keyBindings.basicAttack] === false) this.hitboxes.basicAttack[0].currentFrame = 0;\n            } else {\n                this.visibleHitboxes = this.hitboxes.basicAttack;\n            }\n        } else {\n            this.keysHeld[this.keyBindings.basicAttack] = false;\n        }\n\n        if(this.stun) {\n            this.hitstun();\n        } else if(this.game.currentKeys[this.keyBindings.right]) {\n            if (this.game.keyChanged && this.currentDir !== 1) {\n                this.turn(1);\n            }\n            this.move();\n        } else if (this.game.currentKeys[this.keyBindings.left]) {\n            if (this.game.keyChanged && this.currentDir !== -1) {\n                this.turn(-1);\n            }\n            this.move();\n        } else {\n            this.stop();\n        }\n\n        if (this.game.currentKeys[this.keyBindings.jump] && !this.stun) {\n            if(this.jumpHeld) return;\n            this.jumpHeld = true;\n            if (this.jumpsRemaining > 0) {\n                if (\n                    (this.currentVerticalDir === -1 &&\n                    this.jumpsRemaining < this.allowedJumps &&\n                    this.hurtboxes[0].y > this.jumpStart - this.jumpThreshold.up)\n                        ||\n                    (this.currentVerticalDir === 1 &&\n                    this.jumpsRemaining < this.allowedJumps &&\n                    this.hurtboxes[0].y > this.jumpStart - this.jumpThreshold.down)\n                ) {\n                    return;\n                }\n                this.jumpStart = this.hurtboxes[0].y;\n                this.currentVerticalDir = -1;\n                this.jumpsRemaining--;\n            }\n        } else {\n            this.jumpHeld = false;\n        }\n\n        if(!this.invulnerable) {\n            for (var hurt = 0; hurt < this.hurtboxes.length; hurt++) {\n                var hurtbox = this.hurtboxes[hurt];\n                for (var c = 0; c < this.game.players.length; c++) {\n                    var character = this.game.players[c].character;\n                    if (this === character) continue;\n                    for (var hit = 0; hit < character.visibleHitboxes.length; hit++) {\n                        var hitbox = character.visibleHitboxes[hit];\n                        if (\n                            hitbox.active &&\n                            (hurtbox.x < hitbox.calculatedX + hitbox.width &&\n                            hurtbox.x + hurtbox.width > hitbox.calculatedX) &&\n                            (hurtbox.y - hurtbox.height < character.hurtboxes[0].y - hitbox.yOffset &&\n                            hurtbox.y > character.hurtboxes[0].y - hitbox.yOffset - hitbox.height)\n                        ) {\n                            this.jumpStart = this.hurtboxes[0].y;\n                            this.getHit(hitbox);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        if(this.hurtboxes[0].x < 0 || this.hurtboxes[0].y < 0 || this.hurtboxes[0].x > this.game.canvas.width || this.hurtboxes[0].y > this.game.canvas.height) {\n            this.loseStock();\n        }\n    }\n\n    loseStock() {\n        this.stocks--;\n        if(this.stocks <= 0) {\n            this.game.gameOver();\n        } else {\n            this.hurtboxes[0].x = this.startPosX;\n            this.hurtboxes[0].y = this.startPosY;\n            this.currentSpeed = 0;\n        }\n    }\n\n    getHit(hitbox) {\n        var angleToSpeedModifier = hitbox.angle / 45;\n\n        this.currentVerticalDir = -1;\n        this.currentFallSpeed = this.currentVerticalDir * angleToSpeedModifier * hitbox.knockback;\n\n        this.currentDir = hitbox.dir;\n        this.currentSpeed = (1 / angleToSpeedModifier) * hitbox.knockback;\n\n        //this.stun = true;\n        this.invulnerable = true;\n\n        var character = this;\n        setTimeout(function () {\n            character.invulnerable = false;\n        }, 100);\n\n        setTimeout(function() {\n            character.stun = false;\n        }, hitbox.hitstun);\n    }\n\n    hitstun() {\n        //this.stop()\n    }\n\n    move() {\n        var maxMovementSpeed = this.maxSpeed;\n        if(this.currentFallSpeed > 0) maxMovementSpeed = this.airSpeed;\n\n        var acceleration = maxMovementSpeed / (this.acceleration * this.game.fps);\n        if(this.currentSpeed < maxMovementSpeed) {\n            this.currentSpeed += acceleration;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    stop() {\n        var deceleration = this.maxSpeed / (this.deceleration * this.game.fps);\n        if(this.currentFallSpeed > 0) {\n            deceleration = deceleration / 3;\n        }\n\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    turn(dir) {\n        if(this.currentSpeed === 0) return;\n\n        let deceleration = this.maxSpeed / (this.turnDelay * this.game.fps);\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        if(this.currentSpeed === 0) {\n            this.currentDir = dir;\n            this.game.keyChanged = false;\n        }\n    }\n\n    fall(gravity, floors) {\n        if(this.currentVerticalDir === -1) {\n            this.jump(gravity, floors);\n            return;\n        }\n\n        if(this.currentFallSpeed > 0) {\n            this.jumping = false;\n        }\n\n        var hitFloor = false;\n\n        for(let h = 0; h < this.hurtboxes.length; h++) {\n            let hurtbox = this.hurtboxes[h];\n\n            for(let f = 0; f < floors.length; f++) {\n                let floor = floors[f];\n                if(\n                    !this.jumping &&\n                    (hurtbox.y >= floor.y && this.currentVerticalDir === 1) &&\n                    ((hurtbox.y - hurtbox.height <= floor.y)) &&\n                    ((hurtbox.x >= floor.x && hurtbox.x <= floor.x + floor.width) ||\n                    (hurtbox.x + hurtbox.width >= floor.x && hurtbox.x + hurtbox.width <= floor.x + floor.width))\n                ) {\n                    hitFloor = true;\n                    if(this.stun) {\n                        this.stun = false;\n                        this.currentSpeed = this.currentDir;\n                    }\n                    this.hurtboxes[0].y = floor.y;\n                }\n            }\n            if(hitFloor) {\n                this.jumpsRemaining = this.allowedJumps;\n                this.currentFallSpeed = 0;\n                break;\n            } else if(this.jumpsRemaining === this.allowedJumps) {\n                this.jumpsRemaining = this.allowedJumps - 1;\n            }\n\n            this.currentFallSpeed += gravity / (this.weight * this.game.fps);\n            hurtbox.y += this.currentFallSpeed;\n        }\n    }\n    \n    jump(gravity, floors) {\n        if(this.hurtboxes[0].y > this.jumpStart - this.jumpHeight) {\n            this.currentFallSpeed -= gravity / (this.jumpPower * this.game.fps);\n            this.hurtboxes[0].y += this.currentFallSpeed;\n            this.jumping = true;\n        } else if(!this.stun) {\n            this.currentVerticalDir = 1;\n        }\n    }\n}\n\nclass Hurtbox {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n\nclass Hitbox {\n    constructor(xOffset, yOffset, width, height, damage, angle, knockback, growth, hitstun, startFrame, endFrame, cooldown) {\n        this.xOffset = xOffset;\n        this.yOffset = yOffset;\n        this.width = width;\n        this.height = height;\n        this.damage = damage;\n        this.angle = angle;\n        this.knockback = knockback;\n        this.growth = growth;\n        this.dir = 1;\n        this.startFrame = startFrame;\n        this.endFrame = endFrame;\n        this.cooldown = cooldown;\n        this.currentFrame = 0;\n        this.active = false;\n\n        let hitstunFrames = hitstun || 60;\n        this.hitstun = (hitstunFrames / 60) * 1000;\n    }\n}\n"]}