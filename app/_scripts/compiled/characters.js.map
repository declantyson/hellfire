{"version":3,"sources":["../src/characters.es6.js"],"names":["Character","game","startPosY","startPosX","opts","name","maxSpeed","fps","acceleration","deceleration","turnDelay","hurtboxes","weight","airSpeed","jumpPower","jumpHeight","allowedJumps","jumpThreshold","currentSpeed","currentFallSpeed","currentDir","currentVerticalDir","jumpStart","y","jumpsRemaining","jumpHeld","stage","fall","gravity","floors","currentKeys","keyBindings","right","keyChanged","turn","move","left","stop","jump","up","down","maxMovementSpeed","i","length","x","dir","hitFloor","h","hurtbox","f","floor","width","Hurtbox","height"],"mappings":"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","file":"characters.js","sourcesContent":["/*\n *\n *\tXL Platform Fighter/Characters\n *\tXL Gaming/Declan Tyson\n *\tv0.0.26\n *\t10/09/2016\n *\n */\n\nclass Character {\n    constructor(game, startPosY, startPosX) {\n        this.game = game;\n    }\n\n    initialise(opts) {\n        // attributes\n        this.name = opts.name;\n        this.maxSpeed = opts.maxSpeed / this.game.fps;\n        this.acceleration = opts.acceleration;\n        this.deceleration = opts.deceleration;\n        this.turnDelay = opts.turnDelay;\n        this.hurtboxes = opts.hurtboxes;\n        this.weight = 1/opts.weight;\n        this.airSpeed = opts.airSpeed / this.game.fps;\n        this.jumpPower = 1/opts.jumpPower;\n        this.jumpHeight = opts.jumpHeight;\n        this.allowedJumps = opts.allowedJumps;\n        this.jumpThreshold = opts.jumpThreshold;\n\n        // state\n        this.currentSpeed = 0;\n        this.currentFallSpeed = 0;\n        this.currentDir = opts.currentDir;\n        this.currentVerticalDir = 1;\n        this.jumpStart = this.hurtboxes[0].y;\n        this.jumpsRemaining = opts.allowedJumps;\n        this.jumpHeld = false;\n    }\n    \n    drawActions(stage) {\n\n        this.fall(stage.gravity, stage.floors);\n\n        if(this.game.currentKeys[this.game.keyBindings.right]) {\n            if (this.game.keyChanged && this.currentDir !== 1) {\n                this.turn(1);\n            }\n            this.move();\n        } else if (this.game.currentKeys[this.game.keyBindings.left]) {\n            if (this.game.keyChanged && this.currentDir !== -1) {\n                this.turn(-1);\n            }\n            this.move();\n        } else {\n            this.stop();\n        }\n\n        if (this.game.currentKeys[this.game.keyBindings.jump]) {\n            if(this.jumpHeld) return;\n            this.jumpHeld = true;\n            if (this.jumpsRemaining > 0) {\n                if (\n                    (this.currentVerticalDir === -1 &&\n                    this.jumpsRemaining < this.allowedJumps &&\n                    this.hurtboxes[0].y > this.jumpStart - this.jumpThreshold.up)\n                        ||\n                    (this.currentVerticalDir === 1 &&\n                    this.jumpsRemaining < this.allowedJumps &&\n                    this.hurtboxes[0].y > this.jumpStart - this.jumpThreshold.down)\n                ) {\n                    return;\n                }\n                this.jumpStart = this.hurtboxes[0].y;\n                this.currentVerticalDir = -1;\n                this.jumpsRemaining--;\n            }\n        } else {\n            this.jumpHeld = false;\n        }\n    }\n\n    move() {\n        var maxMovementSpeed = this.maxSpeed;\n        if(this.currentFallSpeed > 0) maxMovementSpeed = this.airSpeed;\n\n        var acceleration = maxMovementSpeed / (this.acceleration * this.game.fps);\n        if(this.currentSpeed < maxMovementSpeed) {\n            this.currentSpeed += acceleration;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    stop() {\n        var deceleration = this.maxSpeed / (this.deceleration * this.game.fps);\n        if(this.currentFallSpeed > 0) {\n            deceleration = deceleration / 3;\n        }\n\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        for(let i = 0; i < this.hurtboxes.length; i++) {\n            this.hurtboxes[i].x += this.currentDir * this.currentSpeed;\n        }\n    }\n\n    turn(dir) {\n        if(this.currentSpeed === 0) return;\n\n        let deceleration = this.maxSpeed / (this.turnDelay * this.game.fps);\n        if(this.currentSpeed > 0) {\n            this.currentSpeed -= deceleration;\n            if(this.currentSpeed < 0) this.currentSpeed = 0;\n        }\n\n        if(this.currentSpeed === 0) {\n            this.currentDir = dir;\n            this.game.keyChanged = false;\n        }\n    }\n\n    fall(gravity, floors) {\n        if(this.currentVerticalDir === -1) {\n            this.jump(gravity, floors);\n            return;\n        }\n\n        var hitFloor = false;\n\n        for(let h = 0; h < this.hurtboxes.length; h++) {\n            let hurtbox = this.hurtboxes[h];\n            for(let f = 0; f < floors.length; f++) {\n                let floor = floors[f];\n                if(\n                    ((hurtbox.y >= floor.y)) &&\n                    ((hurtbox.x >= floor.x && hurtbox.x <= floor.x + floor.width) ||\n                    (hurtbox.x + hurtbox.width >= floor.x && hurtbox.x + hurtbox.width <= floor.x + floor.width))\n                ) {\n                    hitFloor = true;\n                    this.hurtboxes[0].y = floor.y;\n                }\n            }\n            if(hitFloor) {\n                this.jumpsRemaining = this.allowedJumps;\n                this.currentFallSpeed = 0;\n                break;\n            } else if(this.jumpsRemaining === this.allowedJumps) {\n                this.jumpsRemaining = this.allowedJumps - 1;\n            }\n\n            this.currentFallSpeed += gravity / (this.weight * this.game.fps);\n            hurtbox.y += this.currentFallSpeed;\n        }\n    }\n    \n    jump(gravity, floors) {\n        if(this.hurtboxes[0].y > this.jumpStart - this.jumpHeight) {\n            this.currentFallSpeed -= gravity / (this.jumpPower * this.game.fps);\n            this.hurtboxes[0].y += this.currentFallSpeed;\n        } else {\n            this.currentVerticalDir = 1;\n        }\n    }\n}\n\nclass Hurtbox {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n"]}